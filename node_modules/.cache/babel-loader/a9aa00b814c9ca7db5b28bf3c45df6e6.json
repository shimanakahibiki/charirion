{"ast":null,"code":"var _jsxFileName = \"/Users/k19053kk/charirion/src/pages/ChatRoom.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from \"react-router-dom\"; // import React, { useEffect, useState } from 'react';\n// import './App.css';\n// import { firebaseApp } from './firebaseApp';\n// import Message from './Message';\n// import ChatBox from './ChatBox';\n// const firestore = firebaseApp.firestore();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// function App() {\n//  const [messages, setMessages] = useState<MessageProps[]>([]);\n//  const [message, setMessage] = useState<MessageProps>({ name: '', uid: '', content: '' });\n//  useEffect(() => {\n//    // データベースを監視して画面を更新する \n//    firestore.collection('messages').orderBy('create_at').onSnapshot((docs) => {\n//      const msgs: MessageProps[] = [];\n//      docs.forEach(doc => {\n//        msgs.push(doc.data() as MessageProps);\n//      });\n//      setMessages(msgs);\n//    });\n//  }, []);\n//  const onTextChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n//    if (e.target.name === 'user_name') {\n//      message.name = e.target.value;\n//    } else if (e.target.name === 'profile_image') {\n//      message.uid = e.target.value;\n//    } else if (e.target.name === 'text') {\n//      message.content = e.target.value;\n//    }\n//    setMessage(message);\n//  };\n//  const onButtonClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n//    if (message.name === \"\") {\n//      alert('name empty')\n//      return\n//    } else if (message.content === \"\") {\n//      alert('text empty')\n//      return\n//    }\n//    // ランダムな名前を付けて値を追加する.\n//    firestore.collection('messages').add(message);\n//  };\n// const ChatRoom = () =>{\n//     const {id} = useParams()\n//     return (\n//         <div className=\"App\">\n//           <div className=\"App-header\">\n//             <h2>{id}</h2>\n//           </div>\n//           <div className=\"MessageList\">\n//             {messages.map((m, i) => <Message key={i} {...m} />)}\n//           </div>\n//           <ChatBox onTextChange={onTextChange} onButtonClick={onButtonClick} />\n//         </div>\n//       );\n// };\n// }\n// export default ChatRoom;\nconst sampleData = {\n  bikeUserUid: \"hogehoge\",\n  chat: [{\n    uid: \"hogehogehoge\",\n    name: \"エライザちゃん\",\n    content: \"いいてんきですねー\",\n    createdAt: \"2022-02-10...\"\n  }, {\n    uid: \"hogehogehoge\",\n    name: \"エライザちゃん\",\n    content: \"いいてんきですねー\",\n    createdAt: \"2022-02-10...\"\n  }, {\n    uid: \"hogehogehoge\",\n    name: \"エライザちゃん\",\n    content: \"いいてんきですねー\",\n    createdAt: \"2022-02-10...\"\n  }]\n};\n\nconst ChatRoom = () => {\n  _s();\n\n  const [uid, setUid] = useState('');\n  const [name, setName] = useState('');\n  const [items, setItems] = useState([]);\n  const {\n    id\n  } = useParams();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setItems([...items, {\n      name: name,\n      uid: uid\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [\"\\u540D\\u524D\\uFF1A\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 16\n      }, this), \"uid\\uFF1A\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: uid,\n        onChange: e => setUid(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: items.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.uid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatRoom, \"Y5J9pb2Ef/TyMPn9o1Zd4/r6DSw=\", false, function () {\n  return [useParams];\n});\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["/Users/k19053kk/charirion/src/pages/ChatRoom.tsx"],"names":["React","useState","useParams","sampleData","bikeUserUid","chat","uid","name","content","createdAt","ChatRoom","setUid","setName","items","setItems","id","handleSubmit","e","preventDefault","target","value","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CACA;AACA;AACA;AACA;AACA;AAEA;;;AAOA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA,MAAMC,UAAU,GAAG;AACfC,EAAAA,WAAW,EAAE,UADE;AAEfC,EAAAA,IAAI,EAAE,CACJ;AACEC,IAAAA,GAAG,EAAE,cADP;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,OAAO,EAAE,WAHX;AAIEC,IAAAA,SAAS,EAAE;AAJb,GADI,EAOJ;AACEH,IAAAA,GAAG,EAAE,cADP;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,OAAO,EAAE,WAHX;AAIEC,IAAAA,SAAS,EAAE;AAJb,GAPI,EAaJ;AACEH,IAAAA,GAAG,EAAE,cADP;AAEEC,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,OAAO,EAAE,WAHX;AAIEC,IAAAA,SAAS,EAAE;AAJb,GAbI;AAFS,CAAnB;;AAwBA,MAAMC,QAAmB,GAAG,MAAmB;AAAA;;AAE3C,QAAM,CAACJ,GAAD,EAAMK,MAAN,IAAgBV,QAAQ,CAAS,EAAT,CAA9B;AACA,QAAM,CAACM,IAAD,EAAOK,OAAP,IAAkBX,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAa,EAAb,CAAlC;AAGA,QAAM;AAACc,IAAAA;AAAD,MAAOb,SAAS,EAAtB;;AACA,QAAMc,YAAY,GAAIC,CAAD,IAAyC;AAC1DA,IAAAA,CAAC,CAACC,cAAF;AACAJ,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAACN,MAAAA,IAAI,EAAEA,IAAP;AAAaD,MAAAA,GAAG,EAAEA;AAAlB,KAAX,CAAD,CAAR;AACD,GAHH;;AAKA,sBACI;AAAA,4BACI;AAAA,gBAAKS;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAAA,oDACG;AAAO,QAAA,KAAK,EAAET;AAAd;AAAA;AAAA;AAAA;AAAA,cADH,4BAEI;AAAO,QAAA,KAAK,EAAED,GAAd;AAAmB,QAAA,QAAQ,EAAGW,CAAC,IAAIN,MAAM,CAACM,CAAC,CAACE,MAAF,CAASC,KAAV;AAAzC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA;AAAA,kBACCP,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAoB;AAC7B,8BACE;AAAA,oCACE;AAAA,wBAAKA,IAAI,CAACf;AAAV;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKe,IAAI,CAAChB;AAAV;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAMD,SAPA;AADD;AAAA;AAAA;AAAA;AAAA,cAJA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAlCD;;GAAMI,Q;UAOWR,S;;;KAPXQ,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from \"react-router-dom\";\n// import React, { useEffect, useState } from 'react';\n// import './App.css';\n// import { firebaseApp } from './firebaseApp';\n// import Message from './Message';\n// import ChatBox from './ChatBox';\n\n// const firestore = firebaseApp.firestore();\n\ntype UserData = {\n name: string,\n uid: string,\n}\n\n// function App() {\n//  const [messages, setMessages] = useState<MessageProps[]>([]);\n//  const [message, setMessage] = useState<MessageProps>({ name: '', uid: '', content: '' });\n\n//  useEffect(() => {\n//    // データベースを監視して画面を更新する \n//    firestore.collection('messages').orderBy('create_at').onSnapshot((docs) => {\n//      const msgs: MessageProps[] = [];\n//      docs.forEach(doc => {\n//        msgs.push(doc.data() as MessageProps);\n//      });\n//      setMessages(msgs);\n//    });\n//  }, []);\n\n//  const onTextChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n//    if (e.target.name === 'user_name') {\n//      message.name = e.target.value;\n//    } else if (e.target.name === 'profile_image') {\n//      message.uid = e.target.value;\n//    } else if (e.target.name === 'text') {\n//      message.content = e.target.value;\n//    }\n//    setMessage(message);\n//  };\n//  const onButtonClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n//    if (message.name === \"\") {\n//      alert('name empty')\n//      return\n//    } else if (message.content === \"\") {\n//      alert('text empty')\n//      return\n//    }\n//    // ランダムな名前を付けて値を追加する.\n//    firestore.collection('messages').add(message);\n//  };\n// const ChatRoom = () =>{\n\n//     const {id} = useParams()\n\n//     return (\n//         <div className=\"App\">\n//           <div className=\"App-header\">\n//             <h2>{id}</h2>\n//           </div>\n//           <div className=\"MessageList\">\n//             {messages.map((m, i) => <Message key={i} {...m} />)}\n//           </div>\n//           <ChatBox onTextChange={onTextChange} onButtonClick={onButtonClick} />\n//         </div>\n//       );\n\n// };\n// }\n\n// export default ChatRoom;\n\nconst sampleData = {\n    bikeUserUid: \"hogehoge\",\n    chat: [\n      {\n        uid: \"hogehogehoge\",\n        name: \"エライザちゃん\",\n        content: \"いいてんきですねー\",\n        createdAt: \"2022-02-10...\",\n      },\n      {\n        uid: \"hogehogehoge\",\n        name: \"エライザちゃん\",\n        content: \"いいてんきですねー\",\n        createdAt: \"2022-02-10...\",\n      },\n      {\n        uid: \"hogehogehoge\",\n        name: \"エライザちゃん\",\n        content: \"いいてんきですねー\",\n        createdAt: \"2022-02-10...\",\n      },\n    ],\n  };\n\nconst ChatRoom: React.VFC = (): JSX.Element => {\n\n    const [uid, setUid] = useState<string>('')\n    const [name, setName] = useState<string>('')\n    const [items, setItems] = useState<UserData[]>([]);\n\n\n    const {id} = useParams()\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        setItems([...items, {name: name, uid: uid}]);\n      }\n\n    return (\n        <div>\n            <h2>{id}</h2>\n            <form onSubmit={handleSubmit}>\n            名前：<input value={name} />\n            uid：<input value={uid} onChange={ e => setUid(e.target.value)}/>\n            <button>Add</button>\n            <table>\n            {items.map((item: UserData) => {\n              return(\n                <tr>\n                  <td>{item.name}</td>\n                  <td>{item.uid}</td>\n                </tr>\n              );\n            })}\n          </table>\n        </form>\n        </div>\n\n    )\n}\n\n\nexport default ChatRoom;"]},"metadata":{},"sourceType":"module"}