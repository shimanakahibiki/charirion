{"ast":null,"code":"var _jsxFileName = \"/Users/k19053kk/charirion/src/pages/ChatRoom.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport \"../Chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// function App() {\n//  const [messages, setMessages] = useState<MessageProps[]>([]);\n//  const [message, setMessage] = useState<MessageProps>({ name: '', uid: '', content: '' });\n//  useEffect(() => {\n//    // データベースを監視して画面を更新する \n//    firestore.collection('messages').orderBy('create_at').onSnapshot((docs) => {\n//      const msgs: MessageProps[] = [];\n//      docs.forEach(doc => {\n//        msgs.push(doc.data() as MessageProps);\n//      });\n//      setMessages(msgs);\n//    });\n//  }, []);\n//  const onTextChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n//    if (e.target.name === 'user_name') {\n//      message.name = e.target.value;\n//    } else if (e.target.name === 'profile_image') {\n//      message.uid = e.target.value;\n//    } else if (e.target.name === 'text') {\n//      message.content = e.target.value;\n//    }\n//    setMessage(message);\n//  };\n//  const onButtonClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n//    if (message.name === \"\") {\n//      alert('name empty')\n//      return\n//    } else if (message.content === \"\") {\n//      alert('text empty')\n//      return\n//    }\n//    // ランダムな名前を付けて値を追加する.\n//    firestore.collection('messages').add(message);\n//  };\n// const ChatRoom = () =>{\n//     const {id} = useParams()\nconst ChatRoom = () => {\n  _s();\n\n  const [content, setContent] = useState('');\n  const [name, setName] = useState('');\n  const [items, setItems] = useState([]);\n  const context = useContext(AuthContext);\n  const {\n    id\n  } = useParams();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setItems([...items, {\n      name: name,\n      content: content\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"balloon_l\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"faceicon\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.PUBLIC_URL}/logo512.jpg`,\n          alt: \"Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"says\",\n        children: \"\\u3070\\u3070\\u3051\\u3093\\u304D\\u3082\\u3044\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"balloon_r\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: items.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"balloon_r\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"says\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: item.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 62\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 59\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"faceicon\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `${process.env.PUBLIC_URL}/hiroyuki.jpg`,\n                  alt: \"Logo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [\"\\u540D\\u524D\\uFF1A\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 20\n      }, this), \"\\u30C1\\u30E3\\u30C3\\u30C8\\uFF1A\", /*#__PURE__*/_jsxDEV(\"input\", {\n        value: content,\n        onChange: e => setContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatRoom, \"vBNDyzJW5vVBo2HrtOQnUDxAW34=\", false, function () {\n  return [useParams];\n});\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["/Users/k19053kk/charirion/src/pages/ChatRoom.tsx"],"names":["React","useState","useParams","useContext","AuthContext","ChatRoom","content","setContent","name","setName","items","setItems","context","id","handleSubmit","e","preventDefault","process","env","PUBLIC_URL","map","item","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport \"../Chat.css\";\n\ntype UserData = {\n name: string,\n content: string,\n}\n\n// function App() {\n//  const [messages, setMessages] = useState<MessageProps[]>([]);\n//  const [message, setMessage] = useState<MessageProps>({ name: '', uid: '', content: '' });\n\n//  useEffect(() => {\n//    // データベースを監視して画面を更新する \n//    firestore.collection('messages').orderBy('create_at').onSnapshot((docs) => {\n//      const msgs: MessageProps[] = [];\n//      docs.forEach(doc => {\n//        msgs.push(doc.data() as MessageProps);\n//      });\n//      setMessages(msgs);\n//    });\n//  }, []);\n\n//  const onTextChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n//    if (e.target.name === 'user_name') {\n//      message.name = e.target.value;\n//    } else if (e.target.name === 'profile_image') {\n//      message.uid = e.target.value;\n//    } else if (e.target.name === 'text') {\n//      message.content = e.target.value;\n//    }\n//    setMessage(message);\n//  };\n//  const onButtonClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n//    if (message.name === \"\") {\n//      alert('name empty')\n//      return\n//    } else if (message.content === \"\") {\n//      alert('text empty')\n//      return\n//    }\n//    // ランダムな名前を付けて値を追加する.\n//    firestore.collection('messages').add(message);\n//  };\n// const ChatRoom = () =>{\n\n//     const {id} = useParams()\n\n\nconst ChatRoom: React.VFC = (): JSX.Element => {\n\n    const [content, setContent] = useState<string>('')\n    const [name, setName] = useState<string>('')\n    const [items, setItems] = useState<UserData[]>([]);\n    const context = useContext(AuthContext);\n\n\n    const {id} = useParams()\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        setItems([...items, {name: name, content: content}]);\n      }\n\n    return (\n        <div>\n            <h2>{id}</h2>\n                <div className=\"balloon_l\">\n                    <div className=\"faceicon\">\n                        <img src={`${process.env.PUBLIC_URL}/logo512.jpg`} alt=\"Logo\" />\n                    </div>\n                    <p className=\"says\">ばばけんきもい</p>\n                </div>\n                <div className=\"balloon_r\">\n                    <table>\n                        {items.map((item: UserData) => {\n                            return(\n                            <tr>\n                                {/* <td>{item.name}</td> */}\n                                <div className=\"balloon_r\">\n                                    <div className=\"says\"><p><td>{item.content}</td></p></div>\n                                    <div className=\"faceicon\">\n                                        <img src={`${process.env.PUBLIC_URL}/hiroyuki.jpg`} alt=\"Logo\" />\n                                    </div>\n                                </div>\n                            </tr>\n                            );\n                            })}\n                    </table>\n                </div>\n            <form onSubmit={handleSubmit}>\n                名前：<input value={name} onChange={ e => setName(e.target.value)}/>\n                チャット：<input value={content} onChange={ e => setContent(e.target.value)}/>\n            <button>Add</button>\n            </form>\n        </div>\n    )\n}\n\nexport default ChatRoom;"]},"metadata":{},"sourceType":"module"}