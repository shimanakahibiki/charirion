{"ast":null,"code":"var _jsxFileName = \"/Users/k19053kk/charirion/src/pages/ChatRoom.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from \"react-router-dom\"; // import React, { useEffect, useState } from 'react';\n// import './App.css';\n// import { firebaseApp } from './firebaseApp';\n// import Message from './Message';\n// import ChatBox from './ChatBox';\n// const firestore = firebaseApp.firestore();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// function App() {\n//  const [messages, setMessages] = useState<MessageProps[]>([]);\n//  const [message, setMessage] = useState<MessageProps>({ name: '', uid: '', content: '' });\n//  useEffect(() => {\n//    // データベースを監視して画面を更新する \n//    firestore.collection('messages').orderBy('create_at').onSnapshot((docs) => {\n//      const msgs: MessageProps[] = [];\n//      docs.forEach(doc => {\n//        msgs.push(doc.data() as MessageProps);\n//      });\n//      setMessages(msgs);\n//    });\n//  }, []);\n//  const onTextChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n//    if (e.target.name === 'user_name') {\n//      message.name = e.target.value;\n//    } else if (e.target.name === 'profile_image') {\n//      message.uid = e.target.value;\n//    } else if (e.target.name === 'text') {\n//      message.content = e.target.value;\n//    }\n//    setMessage(message);\n//  };\n//  const onButtonClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n//    if (message.name === \"\") {\n//      alert('name empty')\n//      return\n//    } else if (message.content === \"\") {\n//      alert('text empty')\n//      return\n//    }\n//    // ランダムな名前を付けて値を追加する.\n//    firestore.collection('messages').add(message);\n//  };\n// const ChatRoom = () =>{\n//     const {id} = useParams()\n//     return (\n//         <div className=\"App\">\n//           <div className=\"App-header\">\n//             <h2>{id}</h2>\n//           </div>\n//           <div className=\"MessageList\">\n//             {messages.map((m, i) => <Message key={i} {...m} />)}\n//           </div>\n//           <ChatBox onTextChange={onTextChange} onButtonClick={onButtonClick} />\n//         </div>\n//       );\n// };\n// }\n// export default ChatRoom;\n// const sampleData = {\n//     bikeUserUid: \"hogehoge\",\n//     chat: [\n//       {\n//         uid: \"hogehogehoge\",\n//         name: \"エライザちゃん\",\n//         content: \"いいてんきですねー\",\n//         createdAt: \"2022-02-10...\",\n//       },\n//       {\n//         uid: \"hogehogehoge\",\n//         name: \"エライザちゃん\",\n//         content: \"いいてんきですねー\",\n//         createdAt: \"2022-02-10...\",\n//       },\n//       {\n//         uid: \"hogehogehoge\",\n//         name: \"エライザちゃん\",\n//         content: \"いいてんきですねー\",\n//         createdAt: \"2022-02-10...\",\n//       },\n//     ],\n//   };\nconst ChatRoom = () => {\n  _s();\n\n  const [user, setUser] = useState({\n    uid: hogehogehoge,\n    name: \"エライザちゃん\"\n  }); // OK\n\n  const {\n    id\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: user.uid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatRoom, \"0bkeQHBFVe9VdL+Ilbu6CA+nbi0=\", false, function () {\n  return [useParams];\n});\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["/Users/k19053kk/charirion/src/pages/ChatRoom.tsx"],"names":["React","useState","useParams","ChatRoom","user","setUser","uid","hogehogehoge","name","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CACA;AACA;AACA;AACA;AACA;AAEA;;;;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMC,QAAmB,GAAG,MAAM;AAAA;;AAE9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAW;AAAEK,IAAAA,GAAG,EAAEC,YAAP;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GAAX,CAAhC,CAF8B,CAEqD;;AAGnF,QAAM;AAACC,IAAAA;AAAD,MAAOP,SAAS,EAAtB;AAEA,sBACI;AAAA,4BACI;AAAA,gBAAKO;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAKL,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAKF,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAfD;;GAAML,Q;UAKWD,S;;;KALXC,Q;AAkBN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useParams } from \"react-router-dom\";\n// import React, { useEffect, useState } from 'react';\n// import './App.css';\n// import { firebaseApp } from './firebaseApp';\n// import Message from './Message';\n// import ChatBox from './ChatBox';\n\n// const firestore = firebaseApp.firestore();\n\ntype UserData = {\n content: string,\n name: string,\n uid: string,\n createdA: string,\n}\n\n// function App() {\n//  const [messages, setMessages] = useState<MessageProps[]>([]);\n//  const [message, setMessage] = useState<MessageProps>({ name: '', uid: '', content: '' });\n\n//  useEffect(() => {\n//    // データベースを監視して画面を更新する \n//    firestore.collection('messages').orderBy('create_at').onSnapshot((docs) => {\n//      const msgs: MessageProps[] = [];\n//      docs.forEach(doc => {\n//        msgs.push(doc.data() as MessageProps);\n//      });\n//      setMessages(msgs);\n//    });\n//  }, []);\n\n//  const onTextChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n//    if (e.target.name === 'user_name') {\n//      message.name = e.target.value;\n//    } else if (e.target.name === 'profile_image') {\n//      message.uid = e.target.value;\n//    } else if (e.target.name === 'text') {\n//      message.content = e.target.value;\n//    }\n//    setMessage(message);\n//  };\n//  const onButtonClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n//    if (message.name === \"\") {\n//      alert('name empty')\n//      return\n//    } else if (message.content === \"\") {\n//      alert('text empty')\n//      return\n//    }\n//    // ランダムな名前を付けて値を追加する.\n//    firestore.collection('messages').add(message);\n//  };\n// const ChatRoom = () =>{\n\n//     const {id} = useParams()\n\n//     return (\n//         <div className=\"App\">\n//           <div className=\"App-header\">\n//             <h2>{id}</h2>\n//           </div>\n//           <div className=\"MessageList\">\n//             {messages.map((m, i) => <Message key={i} {...m} />)}\n//           </div>\n//           <ChatBox onTextChange={onTextChange} onButtonClick={onButtonClick} />\n//         </div>\n//       );\n\n// };\n// }\n\n// export default ChatRoom;\n\n// const sampleData = {\n//     bikeUserUid: \"hogehoge\",\n//     chat: [\n//       {\n//         uid: \"hogehogehoge\",\n//         name: \"エライザちゃん\",\n//         content: \"いいてんきですねー\",\n//         createdAt: \"2022-02-10...\",\n//       },\n//       {\n//         uid: \"hogehogehoge\",\n//         name: \"エライザちゃん\",\n//         content: \"いいてんきですねー\",\n//         createdAt: \"2022-02-10...\",\n//       },\n//       {\n//         uid: \"hogehogehoge\",\n//         name: \"エライザちゃん\",\n//         content: \"いいてんきですねー\",\n//         createdAt: \"2022-02-10...\",\n//       },\n//     ],\n//   };\n\nconst ChatRoom: React.VFC = () => {\n\n    const [user, setUser] = useState<UserData>({ uid: hogehogehoge, name: \"エライザちゃん\" }) // OK\n\n\n    const {id} = useParams()\n\n    return (\n        <div>\n            <h2>{id}</h2>\n            <h2>{user.uid}</h2>\n            <h2>{user.name}</h2>\n        </div>\n\n    )\n}\n\n\nexport default ChatRoom"]},"metadata":{},"sourceType":"module"}