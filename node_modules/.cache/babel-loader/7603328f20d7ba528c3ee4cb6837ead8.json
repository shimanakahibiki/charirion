{"ast":null,"code":"var _jsxFileName = \"/Users/k19053kk/charirion/src/pages/ChatRoom.tsx\",\n    _s2 = $RefreshSig$();\n\nimport { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css'; // import { firebaseApp } from './firebaseApp';\n\nimport Message from './Message';\nimport ChatBox from './ChatBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firestore = firebaseApp.firestore();\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState({\n    user_name: '',\n    profile_image: '',\n    text: ''\n  });\n  useEffect(() => {\n    // データベースを監視して画面を更新する \n    firestore.collection('messages').orderBy('create_at').onSnapshot(docs => {\n      // ここ ちょいダサいな.\n      const msgs = [];\n      docs.forEach(doc => {\n        msgs.push(doc.data());\n      });\n      setMessages(msgs);\n    });\n  }, []);\n\n  const onTextChange = e => {\n    if (e.target.name === 'user_name') {\n      message.user_name = e.target.value;\n    } else if (e.target.name === 'profile_image') {\n      message.profile_image = e.target.value;\n    } else if (e.target.name === 'text') {\n      message.text = e.target.value;\n    }\n\n    setMessage(message);\n  };\n\n  const onButtonClick = e => {\n    if (message.user_name === \"\") {\n      alert('user_name empty');\n      return;\n    } else if (message.text === \"\") {\n      alert('text empty');\n      return;\n    } // ランダムな名前を付けて値を追加する.\n\n\n    firestore.collection('messages').add(message);\n  };\n\n  const ChatRoom = () => {\n    _s();\n\n    const {\n      id\n    } = useParams();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MessageList\",\n        children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(Message, { ...m\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n        onTextChange: onTextChange,\n        onButtonClick: onButtonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this);\n  };\n\n  _s(ChatRoom, \"r5uZNI/QgQLJ6YUN+rmQ/OIgZ/k=\", false, function () {\n    return [useParams];\n  });\n}\n\n_s2(App, \"tqmwBiU0S9tszRLyyLkRoWIHmpU=\");\n\n_c = App;\n;\nexport default ChatRoom;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/k19053kk/charirion/src/pages/ChatRoom.tsx"],"names":["useParams","React","useEffect","useState","Message","ChatBox","firestore","firebaseApp","App","messages","setMessages","message","setMessage","user_name","profile_image","text","collection","orderBy","onSnapshot","docs","msgs","forEach","doc","push","data","onTextChange","e","target","name","value","onButtonClick","alert","add","ChatRoom","id","map","m","i"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\n// import { firebaseApp } from './firebaseApp';\nimport Message from './Message';\nimport ChatBox from './ChatBox';\n\nconst firestore = firebaseApp.firestore();\n\ntype MessageProps = {\n text: string,\n user_name: string,\n profile_image: string,\n}\n\nfunction App() {\n const [messages, setMessages] = useState<MessageProps[]>([]);\n const [message, setMessage] = useState<MessageProps>({ user_name: '', profile_image: '', text: '' });\n\n useEffect(() => {\n   // データベースを監視して画面を更新する \n   firestore.collection('messages').orderBy('create_at').onSnapshot((docs) => {\n     // ここ ちょいダサいな.\n     const msgs: MessageProps[] = [];\n     docs.forEach(doc => {\n       msgs.push(doc.data() as MessageProps);\n     });\n     setMessages(msgs);\n   });\n }, []);\n\n const onTextChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n   if (e.target.name === 'user_name') {\n     message.user_name = e.target.value;\n   } else if (e.target.name === 'profile_image') {\n     message.profile_image = e.target.value;\n   } else if (e.target.name === 'text') {\n     message.text = e.target.value;\n   }\n   setMessage(message);\n };\n const onButtonClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n   if (message.user_name === \"\") {\n     alert('user_name empty')\n     return\n   } else if (message.text === \"\") {\n     alert('text empty')\n     return\n   }\n   // ランダムな名前を付けて値を追加する.\n   firestore.collection('messages').add(message);\n };\nconst ChatRoom = () =>{\n\n    const {id} = useParams()\n\n    return (\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <h2>{id}</h2>\n          </div>\n          <div className=\"MessageList\">\n            {messages.map((m, i) => <Message key={i} {...m} />)}\n          </div>\n          <ChatBox onTextChange={onTextChange} onButtonClick={onButtonClick} />\n        </div>\n      );\n\n};\n};\n  \n\nexport default ChatRoom;\nexport default App;"]},"metadata":{},"sourceType":"module"}